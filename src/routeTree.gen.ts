/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SearchImport } from './routes/search'
import { Route as PlaylistImport } from './routes/playlist'
import { Route as MoviesImport } from './routes/movies'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as MoviesDiscoverImport } from './routes/movies/discover'
import { Route as MoviesWatchMovieImport } from './routes/movies/watch.$movie'

// Create/Update Routes

const SearchRoute = SearchImport.update({
  path: '/search',
  getParentRoute: () => rootRoute,
} as any)

const PlaylistRoute = PlaylistImport.update({
  path: '/playlist',
  getParentRoute: () => rootRoute,
} as any)

const MoviesRoute = MoviesImport.update({
  path: '/movies',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const MoviesDiscoverRoute = MoviesDiscoverImport.update({
  path: '/discover',
  getParentRoute: () => MoviesRoute,
} as any)

const MoviesWatchMovieRoute = MoviesWatchMovieImport.update({
  path: '/watch/$movie',
  getParentRoute: () => MoviesRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/movies': {
      id: '/movies'
      path: '/movies'
      fullPath: '/movies'
      preLoaderRoute: typeof MoviesImport
      parentRoute: typeof rootRoute
    }
    '/playlist': {
      id: '/playlist'
      path: '/playlist'
      fullPath: '/playlist'
      preLoaderRoute: typeof PlaylistImport
      parentRoute: typeof rootRoute
    }
    '/search': {
      id: '/search'
      path: '/search'
      fullPath: '/search'
      preLoaderRoute: typeof SearchImport
      parentRoute: typeof rootRoute
    }
    '/movies/discover': {
      id: '/movies/discover'
      path: '/discover'
      fullPath: '/movies/discover'
      preLoaderRoute: typeof MoviesDiscoverImport
      parentRoute: typeof MoviesImport
    }
    '/movies/watch/$movie': {
      id: '/movies/watch/$movie'
      path: '/watch/$movie'
      fullPath: '/movies/watch/$movie'
      preLoaderRoute: typeof MoviesWatchMovieImport
      parentRoute: typeof MoviesImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AboutRoute,
  MoviesRoute: MoviesRoute.addChildren({
    MoviesDiscoverRoute,
    MoviesWatchMovieRoute,
  }),
  PlaylistRoute,
  SearchRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/movies",
        "/playlist",
        "/search"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/movies": {
      "filePath": "movies.tsx",
      "children": [
        "/movies/discover",
        "/movies/watch/$movie"
      ]
    },
    "/playlist": {
      "filePath": "playlist.tsx"
    },
    "/search": {
      "filePath": "search.tsx"
    },
    "/movies/discover": {
      "filePath": "movies/discover.tsx",
      "parent": "/movies"
    },
    "/movies/watch/$movie": {
      "filePath": "movies/watch.$movie.tsx",
      "parent": "/movies"
    }
  }
}
ROUTE_MANIFEST_END */
